// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkManager.Infrastructure;

#nullable disable

namespace ParkManager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ParkManager.Domain.Establishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CarsParkingSpaces")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MotorcyclesParkingSpaces")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Establishments", (string)null);
                });

            modelBuilder.Entity("ParkManager.Domain.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("ParkManager.Domain.Establishment", b =>
                {
                    b.OwnsOne("ParkManager.Domain.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("EstablishmentId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT")
                                .HasColumnName("City");

                            b1.Property<string>("Complement")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT")
                                .HasColumnName("Complement");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("TEXT")
                                .HasColumnName("Number");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("TEXT")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("TEXT")
                                .HasColumnName("ZipCode");

                            b1.HasKey("EstablishmentId");

                            b1.ToTable("Establishments");

                            b1.WithOwner()
                                .HasForeignKey("EstablishmentId");
                        });

                    b.OwnsOne("ParkManager.Domain.CNPJ", "Cnpj", b1 =>
                        {
                            b1.Property<Guid>("EstablishmentId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Cnpj")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("TEXT")
                                .HasColumnName("Cnpj");

                            b1.HasKey("EstablishmentId");

                            b1.ToTable("Establishments");

                            b1.WithOwner()
                                .HasForeignKey("EstablishmentId");
                        });

                    b.OwnsMany("ParkManager.Domain.ParkingMovement", "_parkingMovementList", b1 =>
                        {
                            b1.Property<Guid>("Guid")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT")
                                .HasColumnName("Id");

                            b1.Property<DateTime>("EntryDate")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("EstablishmentId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("ExitDate")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("ParkingId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Guid");

                            b1.HasIndex("EstablishmentId");

                            b1.ToTable("ParkingMovements", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EstablishmentId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Cnpj")
                        .IsRequired();

                    b.Navigation("_parkingMovementList");
                });
#pragma warning restore 612, 618
        }
    }
}
